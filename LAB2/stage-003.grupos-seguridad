## üîß Fase 3 ‚Äì Aplicaci√≥n de reglas en Security Groups personalizados

**üåü Objetivo:**
Definir y aplicar reglas de acceso entrante y saliente mediante Security Groups, controlando el tr√°fico permitido hacia las instancias.

**üìú Descripci√≥n:**
Los Security Groups en OpenStack act√∫an como firewalls virtuales por instancia, permitiendo o denegando tr√°fico seg√∫n puerto, protocolo y direcci√≥n. Esta fase cubre la creaci√≥n, modificaci√≥n y aplicaci√≥n de Security Groups personalizados, adem√°s de la validaci√≥n de su efecto pr√°ctico usando una instancia CirrOS con servicios simulados por `nc`.

---

### üß≠ Acciones desde CLI

1. **Crear un nuevo Security Group:**

   ```bash
   openstack security group create web-only \
     --description "Permite solo ping y HTTP"
   ```

   > Se crea un grupo vac√≠o sin reglas por defecto (salvo salientes permitidas).

2. **A√±adir una regla para ICMP (ping):**

   ```bash
   openstack security group rule create \
     --proto icmp \
     web-only
   ```

   > Esto permite que la instancia responda a `ping` desde el exterior.

3. **A√±adir una regla para HTTP (puerto 80 TCP):**

   ```bash
   openstack security group rule create \
     --proto tcp \
     --dst-port 80 \
     web-only
   ```

   > Solo se permitir√° tr√°fico TCP entrante al puerto 80.

4. **Asociar el Security Group a una instancia existente:**

   ```bash
   openstack server add security group cirros-test web-only
   ```

   > Si la instancia ya tiene el grupo `default`, este seguir√° activo a menos que lo quites expl√≠citamente.

5. **(Opcional) Verificar las reglas actuales de la instancia:**

   ```bash
   openstack server show cirros-test -f json | jq '.security_groups'
   openstack security group show web-only
   ```

---

### üí• Acciones desde Horizon

1. Ir a **Project > Network > Security Groups**
2. Crear un nuevo grupo con nombre `web-only` y descripci√≥n
3. Ir a la pesta√±a **Rules** y a√±adir:

   * ICMP (tipo = -1, c√≥digo = -1)
   * TCP puerto 80 (puerto inicial y final = 80)
4. Ir a **Instances**, seleccionar la instancia ‚Üí men√∫ **Edit Security Groups**
5. Quitar `default` si se desea, y a√±adir `web-only`

---

### ‚öñÔ∏è Comparativa CLI vs Horizon

| Acci√≥n                    | CLI (openstack)           | Horizon                       |
| ------------------------- | ------------------------- | ----------------------------- |
| Crear grupo               | ‚úÖ Preciso y r√°pido        | ‚úÖ Intuitivo pero m√°s lento    |
| A√±adir reglas espec√≠ficas | ‚úÖ Control total con flags | ‚ö†Ô∏è Puede ser confuso con ICMP |
| Asignar grupo a instancia | ‚úÖ En un comando           | ‚úÖ Desde men√∫ visual           |

---

### üßπ Retos para el alumno

1. Crear un grupo llamado `solo-ssh` que permita **√∫nicamente TCP/22** (SSH).
2. Quitar el grupo `default` de una instancia y dejarla solo con `solo-ssh`.
3. Verificar que:

   * `ping` desde fuera falla
   * HTTP (puerto 80) falla
   * Solo responde si se escucha algo en el 22 (puede usarse `nc -lk -p 22 -e /bin/echo` en CirrOS)

---

### ‚úÖ Validaciones esperadas

* Las reglas creadas est√°n correctamente asociadas al grupo
* La instancia solo responde en los puertos definidos
* Las pruebas con `nc -vz` o `curl` desde el exterior confirman el filtrado
* Si se remueve `default`, ICMP deja de estar permitido por defecto

---

## ü§© Reto final (funcional): Hacer p√∫blica una instancia **solo por puerto 80** y bloquear el resto

**Escenario:**
Una instancia ejecuta un servicio en el puerto 80 (usando `nc`) y no debe exponer ning√∫n otro puerto (ni ICMP ni 22).

**Objetivo:**
‚û°Ô∏è Configurar un Security Group que permita solo el tr√°fico HTTP desde el exterior y aplicar la pol√≠tica a una instancia existente.

### üìå Pistas

* Crea un grupo nuevo sin reglas por defecto.
* A√±ade una √∫nica regla para TCP/80.
* Usa `nc -lk -p 80 -e /bin/echo` en CirrOS para simular servicio.
* Desde tu host, prueba:

  ```bash
  nc -vz <FloatingIP> 80   # deber√≠a conectar
  nc -vz <FloatingIP> 22   # deber√≠a fallar
  ping <FloatingIP>        # deber√≠a fallar
  ```
